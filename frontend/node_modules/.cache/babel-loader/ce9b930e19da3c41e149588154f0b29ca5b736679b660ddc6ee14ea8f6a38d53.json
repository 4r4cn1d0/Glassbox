{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aayus\\\\Glassbox\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Button, Paper, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [traceData, setTraceData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleTrace = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/api/trace', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt,\n          max_new_tokens: 50\n        })\n      });\n      const data = await response.json();\n      setTraceData(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      maxWidth: 1200,\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Glassbox LLM Debugger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        placeholder: \"Enter your prompt here...\",\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleTrace,\n        disabled: loading || !prompt,\n        children: loading ? 'Tracing...' : 'Trace Generation'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), traceData.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Generated Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: traceData.map(step => step.token).join('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mt: 2\n        },\n        gutterBottom: true,\n        children: \"Token-by-Token Analysis:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), traceData.map((step, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Token \", index + 1, \": \", step.token]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jCAcu2ElFGQlr78GRip7hDWbM+w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","Paper","Typography","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","traceData","setTraceData","loading","setLoading","handleTrace","response","fetch","method","headers","body","JSON","stringify","max_new_tokens","data","json","error","console","sx","p","maxWidth","margin","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","fullWidth","multiline","rows","value","onChange","e","target","placeholder","onClick","disabled","length","map","step","token","join","mt","index","_c","$RefreshReg$"],"sources":["C:/Users/aayus/Glassbox/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, TextField, Button, Paper, Typography } from '@mui/material';\r\n\r\ninterface TraceData {\r\n  token: string;\r\n  token_id: number;\r\n  logits: number[];\r\n  attention: number[][][];\r\n}\r\n\r\nfunction App() {\r\n  const [prompt, setPrompt] = useState('');\r\n  const [traceData, setTraceData] = useState<TraceData[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleTrace = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/trace', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ prompt, max_new_tokens: 50 }),\r\n      });\r\n      const data = await response.json();\r\n      setTraceData(data);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3, maxWidth: 1200, margin: '0 auto' }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Glassbox LLM Debugger\r\n      </Typography>\r\n      \r\n      <Paper sx={{ p: 2, mb: 2 }}>\r\n        <TextField\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          value={prompt}\r\n          onChange={(e) => setPrompt(e.target.value)}\r\n          placeholder=\"Enter your prompt here...\"\r\n          sx={{ mb: 2 }}\r\n        />\r\n        <Button \r\n          variant=\"contained\" \r\n          onClick={handleTrace}\r\n          disabled={loading || !prompt}\r\n        >\r\n          {loading ? 'Tracing...' : 'Trace Generation'}\r\n        </Button>\r\n      </Paper>\r\n\r\n      {traceData.length > 0 && (\r\n        <Paper sx={{ p: 2 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Generated Text:\r\n          </Typography>\r\n          <Typography>\r\n            {traceData.map(step => step.token).join('')}\r\n          </Typography>\r\n          \r\n          <Typography variant=\"h6\" sx={{ mt: 2 }} gutterBottom>\r\n            Token-by-Token Analysis:\r\n          </Typography>\r\n          {traceData.map((step, index) => (\r\n            <Box key={index} sx={{ mb: 1 }}>\r\n              <Typography>\r\n                Token {index + 1}: {step.token}\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Paper>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}