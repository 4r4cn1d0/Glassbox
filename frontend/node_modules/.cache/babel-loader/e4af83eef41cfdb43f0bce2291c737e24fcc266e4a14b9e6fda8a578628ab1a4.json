{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aayus\\\\Glassbox\\\\frontend\\\\src\\\\TokenProbabilityBars.tsx\";\nimport React from 'react';\nimport { Box, Typography, LinearProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenProbabilityBars = ({\n  tokens,\n  logits\n}) => {\n  // Convert logits to probabilities using softmax approximation\n  const getTopTokenProbabilities = tokenLogits => {\n    const maxLogit = Math.max(...tokenLogits);\n    const expLogits = tokenLogits.map(logit => Math.exp(logit - maxLogit));\n    const sumExp = expLogits.reduce((sum, exp) => sum + exp, 0);\n    return expLogits.map(exp => exp / sumExp);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2,\n      bgcolor: '#2a2a2a',\n      borderRadius: 2,\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        color: '#fff',\n        mb: 2\n      },\n      children: \"Token Generation Probabilities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxHeight: 400,\n        overflow: 'auto'\n      },\n      children: tokens.slice(0, 10).map((token, index) => {\n        const tokenLogits = logits[index] || [];\n        const probabilities = getTopTokenProbabilities(tokenLogits);\n        const maxProb = Math.max(...probabilities) * 100;\n        const confidence = maxProb;\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: '#fff',\n                fontFamily: 'monospace'\n              },\n              children: [\"Token \", index + 1, \": \\\"\", token, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: '#aaa'\n              },\n              children: [confidence.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: confidence,\n            sx: {\n              height: 8,\n              borderRadius: 4,\n              bgcolor: '#1a1a1a',\n              '& .MuiLinearProgress-bar': {\n                bgcolor: confidence > 80 ? '#4caf50' : confidence > 50 ? '#ff9800' : '#f44336',\n                borderRadius: 4\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              mt: 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                color: '#666'\n              },\n              children: \"Low Confidence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                color: '#666'\n              },\n              children: \"High Confidence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = TokenProbabilityBars;\nexport default TokenProbabilityBars;\nvar _c;\n$RefreshReg$(_c, \"TokenProbabilityBars\");","map":{"version":3,"names":["React","Box","Typography","LinearProgress","jsxDEV","_jsxDEV","TokenProbabilityBars","tokens","logits","getTopTokenProbabilities","tokenLogits","maxLogit","Math","max","expLogits","map","logit","exp","sumExp","reduce","sum","sx","p","bgcolor","borderRadius","mb","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","maxHeight","overflow","slice","token","index","probabilities","maxProb","confidence","display","justifyContent","fontFamily","toFixed","value","height","mt","_c","$RefreshReg$"],"sources":["C:/Users/aayus/Glassbox/frontend/src/TokenProbabilityBars.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Typography, LinearProgress } from '@mui/material';\r\n\r\ninterface TokenProbabilityBarsProps {\r\n  tokens: string[];\r\n  logits: number[][];\r\n}\r\n\r\nconst TokenProbabilityBars: React.FC<TokenProbabilityBarsProps> = ({ tokens, logits }) => {\r\n  // Convert logits to probabilities using softmax approximation\r\n  const getTopTokenProbabilities = (tokenLogits: number[]) => {\r\n    const maxLogit = Math.max(...tokenLogits);\r\n    const expLogits = tokenLogits.map(logit => Math.exp(logit - maxLogit));\r\n    const sumExp = expLogits.reduce((sum, exp) => sum + exp, 0);\r\n    return expLogits.map(exp => exp / sumExp);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 2, bgcolor: '#2a2a2a', borderRadius: 2, mb: 2 }}>\r\n      <Typography variant=\"h6\" sx={{ color: '#fff', mb: 2 }}>\r\n        Token Generation Probabilities\r\n      </Typography>\r\n      <Box sx={{ maxHeight: 400, overflow: 'auto' }}>\r\n        {tokens.slice(0, 10).map((token, index) => {\r\n          const tokenLogits = logits[index] || [];\r\n          const probabilities = getTopTokenProbabilities(tokenLogits);\r\n          const maxProb = Math.max(...probabilities) * 100;\r\n          const confidence = maxProb;\r\n\r\n          return (\r\n            <Box key={index} sx={{ mb: 2 }}>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                <Typography variant=\"body2\" sx={{ color: '#fff', fontFamily: 'monospace' }}>\r\n                  Token {index + 1}: \"{token}\"\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ color: '#aaa' }}>\r\n                  {confidence.toFixed(1)}%\r\n                </Typography>\r\n              </Box>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={confidence}\r\n                sx={{\r\n                  height: 8,\r\n                  borderRadius: 4,\r\n                  bgcolor: '#1a1a1a',\r\n                  '& .MuiLinearProgress-bar': {\r\n                    bgcolor: confidence > 80 ? '#4caf50' : \r\n                            confidence > 50 ? '#ff9800' : '#f44336',\r\n                    borderRadius: 4,\r\n                  },\r\n                }}\r\n              />\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 0.5 }}>\r\n                <Typography variant=\"caption\" sx={{ color: '#666' }}>\r\n                  Low Confidence\r\n                </Typography>\r\n                <Typography variant=\"caption\" sx={{ color: '#666' }}>\r\n                  High Confidence\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TokenProbabilityBars; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}